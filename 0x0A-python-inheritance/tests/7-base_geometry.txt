The 7-base_geometry module
========================

Using ``integer_validator``
---------------------

Importing function from the module
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

success cases:
    >>> bg.integer_validator("num", 99)
    >>> bg.integer_validator("num", 65)

TypeError:
    >>> bg.integer_validator("num", "num@")
    Traceback (most recent call last):
        ...
    TypeError: num must be an integer
    >>> bg.integer_validator("num", None)
    Traceback (most recent call last):
        ...
    TypeError: num must be an integer

ValueError:
    >>> bg.integer_validator("num", 0)
    Traceback (most recent call last):
        ...
    ValueError: num must be greater than 0
    >>> bg.integer_validator("num", -6)
    Traceback (most recent call last):
        ...
    ValueError: num must be greater than 0

missed argument
    >>> bg.integer_validator("num")
    Traceback (most recent call last):
        ...
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
