The 7-base_geometry module
========================

Using ``integer_validator``
---------------------

Importing function from the module
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

success cases:
    >>> bg.integer_validator("num", 99)
    >>> bg.integer_validator("num", 65)

TypeError:
    >>> bg.integer_validator("num", "num@")
    Traceback (most recent call last):
        ...
    TypeError: num must be an integer
    >>> bg.integer_validator("num", None)
    Traceback (most recent call last):
        ...
    TypeError: num must be an integer
    >>> bg.integer_validator("num", True)
    Traceback (most recent call last):
        ...
    TypeError: num must be an integer
    >>> bg = BaseGeometry(None)
    Traceback (most recent call last):
        ...
    TypeError: BaseGeometry() takes no arguments
    >>> bg.integer_validator("my_int", [1, 2, 3])
    Traceback (most recent call last):
        ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", (1, 2, 3))
    Traceback (most recent call last):
        ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", 'alaa')
    Traceback (most recent call last):
        ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", 1.5)
    Traceback (most recent call last):
        ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", {'a': 1})
    Traceback (most recent call last):
        ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("num", (6,))
    Traceback (most recent call last):
        ...
    TypeError: num must be an integer

ValueError:
    >>> bg.integer_validator("num", 0)
    Traceback (most recent call last):
        ...
    ValueError: num must be greater than 0
    >>> bg.integer_validator("num", -6)
    Traceback (most recent call last):
        ...
    ValueError: num must be greater than 0

missing argument:
     >>> bg.integer_validator("age")
     Traceback (most recent call last):
        ...
     TypeError: integer_validator() missing 1 required positional argument: 'value'
     >>> bg.integer_validator()
     Traceback (most recent call last):
        ...
     TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
     >>> bg.integer_validator("my_int", 0, 1)
     Traceback (most recent call last):
        ...
     TypeError: integer_validator() takes 3 positional arguments but 4 were given

irregular cases:
     >>> print(bg.integer_validator) # doctest: +ELLIPSIS
     <bound method BaseGeometry.integer_validator of <7-base_geometry.BaseGeometry object at...>>

area check:
     >>> bg.area()
     Traceback (most recent call last):
       ...
     Exception: area() is not implemented
     >>> bg.area(1)
     Traceback (most recent call last):
       ...
     TypeError: area() takes 1 positional argument but 2 were given


